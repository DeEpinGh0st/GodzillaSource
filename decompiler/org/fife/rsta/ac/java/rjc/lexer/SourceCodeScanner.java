package org.fife.rsta.ac.java.rjc.lexer;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;





















































































































class SourceCodeScanner
  implements TokenTypes
{
  public static final int YYEOF = -1;
  private static final int ZZ_BUFFERSIZE = 16384;
  public static final int YYINITIAL = 0;
  private static final String ZZ_CMAP_PACKED = "\t\b\001\004\001\003\001\000\001\004\001\003\016\b\004\000\001\004\0017\001\031\001\000\001\007\001@\001;\001\030\001,\001-\001\006\001=\0013\001>\001\017\001\005\001\n\003\034\004\016\002\013\001:\0012\0016\0014\0015\0019\001\035\005\r\001\020\005\007\001\t\013\007\001\f\002\007\0010\001\001\0011\001?\001\007\001\000\001\025\001\033\001\036\001#\001\023\001\024\001'\001 \001\"\001\007\001\037\001\026\001$\001\032\001!\001(\001\007\001\022\001\027\001\021\001\002\001)\001*\001%\001&\001+\001.\001<\001/\0018!\b\002\000\004\007\004\000\001\007\002\000\001\b\007\000\001\007\004\000\001\007\005\000\027\007\001\000\037\007\001\000Ŀ\007\031\000r\007\004\000\f\007\016\000\005\007\t\000\001\007\021\000X\b\005\000\023\b\n\000\001\007\013\000\001\007\001\000\003\007\001\000\001\007\001\000\024\007\001\000,\007\001\000&\007\001\000\005\007\004\000\007\001\000\004\b\003\000E\007\001\000&\007\002\000\002\007\006\000\020\007!\000&\007\002\000\001\007\007\000'\007\t\000\021\b\001\000\027\b\001\000\003\b\001\000\001\b\001\000\002\b\001\000\001\b\013\000\033\007\005\000\003\007\r\000\004\b\f\000\006\b\013\000\032\007\005\000\013\007\016\b\007\000\n\b\004\000\002\007\001\bc\007\001\000\001\007\b\b\001\000\006\b\002\007\002\b\001\000\004\b\002\007\n\b\003\007\002\000\001\007\017\000\001\b\001\007\001\b\036\007\033\b\002\000\003\0070\000&\007\013\b\001\007ŏ\000\003\b6\007\002\000\001\b\001\007\020\b\002\000\001\007\004\b\003\000\n\007\002\b\002\000\n\b\021\000\003\b\001\000\b\007\002\000\002\007\002\000\026\007\001\000\007\007\001\000\001\007\003\000\004\007\002\000\001\b\001\007\007\b\002\000\002\b\002\000\003\b\t\000\001\b\004\000\002\007\001\000\003\007\002\b\002\000\n\b\004\007\r\000\003\b\001\000\006\007\004\000\002\007\002\000\026\007\001\000\007\007\001\000\002\007\001\000\002\007\001\000\002\007\002\000\001\b\001\000\005\b\004\000\002\b\002\000\003\b\013\000\004\007\001\000\001\007\007\000\f\b\003\007\f\000\003\b\001\000\t\007\001\000\003\007\001\000\026\007\001\000\007\007\001\000\002\007\001\000\005\007\002\000\001\b\001\007\b\b\001\000\003\b\001\000\003\b\002\000\001\007\017\000\002\007\002\b\002\000\n\b\001\000\001\007\017\000\003\b\001\000\b\007\002\000\002\007\002\000\026\007\001\000\007\007\001\000\002\007\001\000\005\007\002\000\001\b\001\007\006\b\003\000\002\b\002\000\003\b\b\000\002\b\004\000\002\007\001\000\003\007\004\000\n\b\001\000\001\007\020\000\001\b\001\007\001\000\006\007\003\000\003\007\001\000\004\007\003\000\002\007\001\000\001\007\001\000\002\007\003\000\002\007\003\000\003\007\003\000\b\007\001\000\003\007\004\000\005\b\003\000\003\b\001\000\004\b\t\000\001\b\017\000\t\b\t\000\001\007\007\000\003\b\001\000\b\007\001\000\003\007\001\000\027\007\001\000\n\007\001\000\005\007\004\000\007\b\001\000\003\b\001\000\004\b\007\000\002\b\t\000\002\007\004\000\n\b\022\000\002\b\001\000\b\007\001\000\003\007\001\000\027\007\001\000\n\007\001\000\005\007\002\000\001\b\001\007\007\b\001\000\003\b\001\000\004\b\007\000\002\b\007\000\001\007\001\000\002\007\004\000\n\b\022\000\002\b\001\000\b\007\001\000\003\007\001\000\027\007\001\000\020\007\004\000\006\b\002\000\003\b\001\000\004\b\t\000\001\b\b\000\002\007\004\000\n\b\022\000\002\b\001\000\022\007\003\000\030\007\001\000\t\007\001\000\001\007\002\000\007\007\003\000\001\b\004\000\006\b\001\000\001\b\001\000\b\b\022\000\002\b\r\0000\007\001\b\002\007\007\b\004\000\b\007\b\b\001\000\n\b'\000\002\007\001\000\001\007\002\000\002\007\001\000\001\007\002\000\001\007\006\000\004\007\001\000\007\007\001\000\003\007\001\000\001\007\001\000\001\007\002\000\002\007\001\000\004\007\001\b\002\007\006\b\001\000\002\b\001\007\002\000\005\007\001\000\001\007\001\000\006\b\002\000\n\b\002\000\002\007\"\000\001\007\027\000\002\b\006\000\n\b\013\000\001\b\001\000\001\b\001\000\001\b\004\000\002\b\b\007\001\000\"\007\006\000\024\b\001\000\002\b\004\007\004\000\b\b\001\000$\b\t\000\001\b9\000\"\007\001\000\005\007\001\000\002\007\001\000\007\b\003\000\004\b\006\000\n\b\006\000\006\007\004\bF\000&\007\n\000)\007\007\000Z\007\005\000D\007\005\000R\007\006\000\007\007\001\000?\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\001\007\001\000\004\007\002\000'\007\001\000\001\007\001\000\004\007\002\000\037\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\007\007\001\000\027\007\001\000\037\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000'\007\001\000\023\007\016\000\t\b.\000U\007\f\000ɬ\007\002\000\b\007\n\000\032\007\005\000K\007\003\000\003\007\017\000\r\007\001\000\004\007\003\b\013\000\022\007\003\b\013\000\022\007\002\b\f\000\r\007\001\000\003\007\001\000\002\b\f\0004\007 \b\003\000\001\007\003\000\002\007\001\b\002\000\n\b!\000\003\b\002\000\n\b\006\000X\007\b\000)\007\001\bV\000\035\007\003\000\f\b\004\000\f\b\n\000\n\b\036\007\002\000\005\007΋\000l\007\000\007\004\000Z\007\006\000\026\007\002\000\006\007\002\000&\007\002\000\006\007\002\000\b\007\001\000\001\007\001\000\001\007\001\000\001\007\001\000\037\007\002\0005\007\001\000\007\007\001\000\001\007\003\000\003\007\001\000\007\007\003\000\004\007\002\000\006\007\004\000\r\007\005\000\003\007\001\000\007\007\017\000\004\b\032\000\005\b\020\000\002\007\023\000\001\007\013\000\004\b\006\000\006\b\001\000\001\007\r\000\001\007 \000\022\007\036\000\r\b\004\000\001\b\003\000\006\b\027\000\001\007\004\000\001\007\002\000\n\007\001\000\001\007\003\000\005\007\006\000\001\007\001\000\001\007\001\000\001\007\001\000\004\007\001\000\003\007\001\000\007\007\003\000\003\007\005\000\005\007\026\000$\007ກ\000\003\007\031\000\t\007\006\b\001\000\005\007\002\000\005\007\004\000V\007\002\000\002\b\002\000\003\007\001\000_\007\005\000(\007\004\000^\007\021\000\030\0078\000\020\007Ȁ\000ᦶ\007J\000冦\007Z\000ҍ\007ݳ\000⮤\007⅜\000Į\007\002\000;\007\000\007\007\f\000\005\007\005\000\001\007\001\b\n\007\001\000\r\007\001\000\005\007\001\000\001\007\001\000\002\007\001\000\002\007\001\000l\007!\000ū\007\022\000@\007\002\0006\007(\000\r\007\003\000\020\b\020\000\004\b\017\000\002\007\030\000\003\007\031\000\001\007\006\000\005\007\001\000\007\002\000\001\b\004\000\001\007\013\000\n\b\007\000\032\007\004\000\001\007\001\000\032\007\n\000Z\007\003\000\006\007\002\000\006\007\002\000\006\007\002\000\003\007\003\000\002\007\003\000\002\007\022\000\003\b\004\000";
  private static final char[] ZZ_CMAP = zzUnpackCMap("\t\b\001\004\001\003\001\000\001\004\001\003\016\b\004\000\001\004\0017\001\031\001\000\001\007\001@\001;\001\030\001,\001-\001\006\001=\0013\001>\001\017\001\005\001\n\003\034\004\016\002\013\001:\0012\0016\0014\0015\0019\001\035\005\r\001\020\005\007\001\t\013\007\001\f\002\007\0010\001\001\0011\001?\001\007\001\000\001\025\001\033\001\036\001#\001\023\001\024\001'\001 \001\"\001\007\001\037\001\026\001$\001\032\001!\001(\001\007\001\022\001\027\001\021\001\002\001)\001*\001%\001&\001+\001.\001<\001/\0018!\b\002\000\004\007\004\000\001\007\002\000\001\b\007\000\001\007\004\000\001\007\005\000\027\007\001\000\037\007\001\000Ŀ\007\031\000r\007\004\000\f\007\016\000\005\007\t\000\001\007\021\000X\b\005\000\023\b\n\000\001\007\013\000\001\007\001\000\003\007\001\000\001\007\001\000\024\007\001\000,\007\001\000&\007\001\000\005\007\004\000\007\001\000\004\b\003\000E\007\001\000&\007\002\000\002\007\006\000\020\007!\000&\007\002\000\001\007\007\000'\007\t\000\021\b\001\000\027\b\001\000\003\b\001\000\001\b\001\000\002\b\001\000\001\b\013\000\033\007\005\000\003\007\r\000\004\b\f\000\006\b\013\000\032\007\005\000\013\007\016\b\007\000\n\b\004\000\002\007\001\bc\007\001\000\001\007\b\b\001\000\006\b\002\007\002\b\001\000\004\b\002\007\n\b\003\007\002\000\001\007\017\000\001\b\001\007\001\b\036\007\033\b\002\000\003\0070\000&\007\013\b\001\007ŏ\000\003\b6\007\002\000\001\b\001\007\020\b\002\000\001\007\004\b\003\000\n\007\002\b\002\000\n\b\021\000\003\b\001\000\b\007\002\000\002\007\002\000\026\007\001\000\007\007\001\000\001\007\003\000\004\007\002\000\001\b\001\007\007\b\002\000\002\b\002\000\003\b\t\000\001\b\004\000\002\007\001\000\003\007\002\b\002\000\n\b\004\007\r\000\003\b\001\000\006\007\004\000\002\007\002\000\026\007\001\000\007\007\001\000\002\007\001\000\002\007\001\000\002\007\002\000\001\b\001\000\005\b\004\000\002\b\002\000\003\b\013\000\004\007\001\000\001\007\007\000\f\b\003\007\f\000\003\b\001\000\t\007\001\000\003\007\001\000\026\007\001\000\007\007\001\000\002\007\001\000\005\007\002\000\001\b\001\007\b\b\001\000\003\b\001\000\003\b\002\000\001\007\017\000\002\007\002\b\002\000\n\b\001\000\001\007\017\000\003\b\001\000\b\007\002\000\002\007\002\000\026\007\001\000\007\007\001\000\002\007\001\000\005\007\002\000\001\b\001\007\006\b\003\000\002\b\002\000\003\b\b\000\002\b\004\000\002\007\001\000\003\007\004\000\n\b\001\000\001\007\020\000\001\b\001\007\001\000\006\007\003\000\003\007\001\000\004\007\003\000\002\007\001\000\001\007\001\000\002\007\003\000\002\007\003\000\003\007\003\000\b\007\001\000\003\007\004\000\005\b\003\000\003\b\001\000\004\b\t\000\001\b\017\000\t\b\t\000\001\007\007\000\003\b\001\000\b\007\001\000\003\007\001\000\027\007\001\000\n\007\001\000\005\007\004\000\007\b\001\000\003\b\001\000\004\b\007\000\002\b\t\000\002\007\004\000\n\b\022\000\002\b\001\000\b\007\001\000\003\007\001\000\027\007\001\000\n\007\001\000\005\007\002\000\001\b\001\007\007\b\001\000\003\b\001\000\004\b\007\000\002\b\007\000\001\007\001\000\002\007\004\000\n\b\022\000\002\b\001\000\b\007\001\000\003\007\001\000\027\007\001\000\020\007\004\000\006\b\002\000\003\b\001\000\004\b\t\000\001\b\b\000\002\007\004\000\n\b\022\000\002\b\001\000\022\007\003\000\030\007\001\000\t\007\001\000\001\007\002\000\007\007\003\000\001\b\004\000\006\b\001\000\001\b\001\000\b\b\022\000\002\b\r\0000\007\001\b\002\007\007\b\004\000\b\007\b\b\001\000\n\b'\000\002\007\001\000\001\007\002\000\002\007\001\000\001\007\002\000\001\007\006\000\004\007\001\000\007\007\001\000\003\007\001\000\001\007\001\000\001\007\002\000\002\007\001\000\004\007\001\b\002\007\006\b\001\000\002\b\001\007\002\000\005\007\001\000\001\007\001\000\006\b\002\000\n\b\002\000\002\007\"\000\001\007\027\000\002\b\006\000\n\b\013\000\001\b\001\000\001\b\001\000\001\b\004\000\002\b\b\007\001\000\"\007\006\000\024\b\001\000\002\b\004\007\004\000\b\b\001\000$\b\t\000\001\b9\000\"\007\001\000\005\007\001\000\002\007\001\000\007\b\003\000\004\b\006\000\n\b\006\000\006\007\004\bF\000&\007\n\000)\007\007\000Z\007\005\000D\007\005\000R\007\006\000\007\007\001\000?\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\001\007\001\000\004\007\002\000'\007\001\000\001\007\001\000\004\007\002\000\037\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\007\007\001\000\027\007\001\000\037\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000'\007\001\000\023\007\016\000\t\b.\000U\007\f\000ɬ\007\002\000\b\007\n\000\032\007\005\000K\007\003\000\003\007\017\000\r\007\001\000\004\007\003\b\013\000\022\007\003\b\013\000\022\007\002\b\f\000\r\007\001\000\003\007\001\000\002\b\f\0004\007 \b\003\000\001\007\003\000\002\007\001\b\002\000\n\b!\000\003\b\002\000\n\b\006\000X\007\b\000)\007\001\bV\000\035\007\003\000\f\b\004\000\f\b\n\000\n\b\036\007\002\000\005\007΋\000l\007\000\007\004\000Z\007\006\000\026\007\002\000\006\007\002\000&\007\002\000\006\007\002\000\b\007\001\000\001\007\001\000\001\007\001\000\001\007\001\000\037\007\002\0005\007\001\000\007\007\001\000\001\007\003\000\003\007\001\000\007\007\003\000\004\007\002\000\006\007\004\000\r\007\005\000\003\007\001\000\007\007\017\000\004\b\032\000\005\b\020\000\002\007\023\000\001\007\013\000\004\b\006\000\006\b\001\000\001\007\r\000\001\007 \000\022\007\036\000\r\b\004\000\001\b\003\000\006\b\027\000\001\007\004\000\001\007\002\000\n\007\001\000\001\007\003\000\005\007\006\000\001\007\001\000\001\007\001\000\001\007\001\000\004\007\001\000\003\007\001\000\007\007\003\000\003\007\005\000\005\007\026\000$\007ກ\000\003\007\031\000\t\007\006\b\001\000\005\007\002\000\005\007\004\000V\007\002\000\002\b\002\000\003\007\001\000_\007\005\000(\007\004\000^\007\021\000\030\0078\000\020\007Ȁ\000ᦶ\007J\000冦\007Z\000ҍ\007ݳ\000⮤\007⅜\000Į\007\002\000;\007\000\007\007\f\000\005\007\005\000\001\007\001\b\n\007\001\000\r\007\001\000\005\007\001\000\001\007\001\000\002\007\001\000\002\007\001\000l\007!\000ū\007\022\000@\007\002\0006\007(\000\r\007\003\000\020\b\020\000\004\b\017\000\002\007\030\000\003\007\031\000\001\007\006\000\005\007\001\000\007\002\000\001\b\004\000\001\007\013\000\n\b\007\000\032\007\004\000\001\007\001\000\032\007\n\000Z\007\003\000\006\007\002\000\006\007\002\000\006\007\002\000\003\007\003\000\002\007\003\000\002\007\022\000\003\b\004\000");



  
  private static final int[] ZZ_ACTION = zzUnpackAction();












  
  private static final String ZZ_ACTION_PACKED_0 = "\001\000\001\001\001\002\001\003\001\004\001\005\002\006\001\007\007\002\001\b\001\t\002\002\001\n\007\002\001\013\001\f\001\r\001\016\001\017\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001 \001\000\001!\001\"\002\006\004\000\022\002\004\b\002\t\001#\n\002\001$\003\002\001%\006\002\001&\001'\001(\001)\001*\001+\001,\001-\001.\001/\0010\0011\0012\0013\0014\0015\002\000\001\006\001\000\0016\002\002\0017\b\002\0018\n\002\0019\004\b\003\t\001\002\001:\t\002\001;\f\002\001<\001=\001>\002\000\001 \001?\001@\002\002\001A\001\002\001B\001C\005\002\001D\006\002\001\b\001\t\002\000\001E\003\002\001F\001\002\001G\001\002\001H\b\002\001I\005\002\001J\001\002\001K\001\000\001\002\001L\002\002\001M\001N\002\002\001O\002\002\001P\002\002\001\b\001\t\001\000\001\002\001Q\001\002\001R\001S\001\002\001T\013\002\001U\001V\001\002\001W\001X\002\002\001Y\002\002\001Z\001\002\001[\001\b\001\t\001\000\001\\\005\002\001]\001\002\001^\001_\005\002\001`\001a\003\002\001\000\001b\004\002\001c\001\002\001d\001e\002\002\001f\001g\001\002\001\000\001h\004\002\001i\001j\001\002\001k\002\002\001l\001\002\001m\001n\001\002\001o";












  
  private static int[] zzUnpackAction() {
    int[] result = new int[341];
    int offset = 0;
    offset = zzUnpackAction("\001\000\001\001\001\002\001\003\001\004\001\005\002\006\001\007\007\002\001\b\001\t\002\002\001\n\007\002\001\013\001\f\001\r\001\016\001\017\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001 \001\000\001!\001\"\002\006\004\000\022\002\004\b\002\t\001#\n\002\001$\003\002\001%\006\002\001&\001'\001(\001)\001*\001+\001,\001-\001.\001/\0010\0011\0012\0013\0014\0015\002\000\001\006\001\000\0016\002\002\0017\b\002\0018\n\002\0019\004\b\003\t\001\002\001:\t\002\001;\f\002\001<\001=\001>\002\000\001 \001?\001@\002\002\001A\001\002\001B\001C\005\002\001D\006\002\001\b\001\t\002\000\001E\003\002\001F\001\002\001G\001\002\001H\b\002\001I\005\002\001J\001\002\001K\001\000\001\002\001L\002\002\001M\001N\002\002\001O\002\002\001P\002\002\001\b\001\t\001\000\001\002\001Q\001\002\001R\001S\001\002\001T\013\002\001U\001V\001\002\001W\001X\002\002\001Y\002\002\001Z\001\002\001[\001\b\001\t\001\000\001\\\005\002\001]\001\002\001^\001_\005\002\001`\001a\003\002\001\000\001b\004\002\001c\001\002\001d\001e\002\002\001f\001g\001\002\001\000\001h\004\002\001i\001j\001\002\001k\002\002\001l\001\002\001m\001n\001\002\001o", offset, result);
    return result;
  }
  
  private static int zzUnpackAction(String packed, int offset, int[] result) {
    int i = 0;
    int j = offset;
    int l = packed.length();
    label10: while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++); while (true)
      { result[j++] = value; if (--count <= 0)
          continue label10;  } 
    }  return j;
  }




  
  private static final int[] ZZ_ROWMAP = zzUnpackRowMap();





















  
  private static final String ZZ_ROWMAP_PACKED_0 = "\000\000\000A\000\000Ã\000Ą\000Ņ\000Ɔ\000Ǉ\000Ȉ\000ɉ\000ʊ\000ˋ\000̌\000͍\000Ύ\000Ϗ\000А\000ё\000Ғ\000ӓ\000A\000Ԕ\000Օ\000֖\000ח\000ؘ\000ٙ\000ښ\000A\000A\000A\000A\000A\000A\000A\000A\000ۛ\000ܜ\000ݝ\000ޞ\000A\000A\000A\000ߟ\000ࠠ\000ࡡ\000ࢢ\000ࣣ\000त\000॥\000দ\000A\000A\000A\000১\000ਨ\000੩\000પ\000૫\000ବ\000୭\000ம\000௯\000ర\000౱\000ಲ\000ೳ\000ഴ\000൵\000බ\000෷\000ุ\000๹\000຺\000໻\000༼\000ཽ\000྾\000࿿\000၀\000A\000ႁ\000Ⴢ\000A\000ᄃ\000ᅄ\000ᆅ\000ᇆ\000ሇ\000ቈ\000኉\000ዊ\000ጋ\000ፌ\000\000ᎍ\000Ꮞ\000ᐏ\000ᑐ\000ᒑ\000ᓒ\000ᔓ\000ᕔ\000ᖕ\000ᗖ\000A\000A\000ᘗ\000A\000ᙘ\000A\000A\000A\000A\000A\000A\000A\000A\000A\000A\000A\000ᚙ\000ᛚ\000᜛\000᝜\000A\000ឝ\000៞\000\000᠟\000ᡠ\000ᢡ\000ᣢ\000ᤣ\000ᥤ\000ᦥ\000᧦\000\000ᨧ\000ᩨ\000᪩\000᫪\000ᬫ\000᭬\000ᮭ\000ᯮ\000ᰯ\000ᱰ\000A\000Ჱ\000ᳲ\000ᴳ\000ᵴ\000ᶵ\000᷶\000A\000ḷ\000\000Ṹ\000ẹ\000Ỻ\000Ἳ\000ὼ\000᾽\000῾\000‿\000₀\000⃁\000ℂ\000⅃\000ↄ\000⇅\000∆\000≇\000⊈\000⋉\000⌊\000⍋\000⎌\000⏍\000A\000␎\000A\000⑏\000⒐\000A\000A\000\000ⓑ\000┒\000\000╓\000\000\000▔\000◕\000☖\000♗\000⚘\000\000⛙\000✚\000❛\000➜\000⟝\000⠞\000⡟\000⢠\000᷶\000⣡\000\000⤢\000⥣\000⦤\000\000⧥\000\000⨦\000\000⩧\000⪨\000⫩\000⬪\000⭫\000⮬\000⯭\000Ⱞ\000\000Ɐ\000Ⲱ\000⳱\000ⴲ\000⵳\000\000ⶴ\000A\000ⷵ\000⸶\000⹷\000⺸\000⻹\000\000⼺\000⽻\000⾼\000\000⿽\000〾\000\000み\000ダ\000㄁\000ㅂ\000ㆃ\000㇄\000\000㈅\000\000\000㉆\000\000㊇\000㋈\000㌉\000㍊\000㎋\000㏌\000㐍\000㑎\000㒏\000㓐\000㔑\000\000A\000㕒\000\000\000㖓\000㗔\000\000㘕\000㙖\000\000㚗\000\000㛘\000㜙\000㝚\000\000㞛\000㟜\000㠝\000㡞\000㢟\000\000㣠\000\000\000㤡\000㥢\000㦣\000㧤\000㨥\000\000\000㩦\000㪧\000㫨\000㬩\000\000㭪\000㮫\000㯬\000㰭\000\000㱮\000\000\000㲯\000㳰\000\000\000㴱\000㵲\000\000㶳\000㷴\000㸵\000㹶\000\000\000㺷\000\000㻸\000㼹\000\000㽺\000\000\000㾻\000";






















  
  private static int[] zzUnpackRowMap() {
    int[] result = new int[341];
    int offset = 0;
    offset = zzUnpackRowMap("\000\000\000A\000\000Ã\000Ą\000Ņ\000Ɔ\000Ǉ\000Ȉ\000ɉ\000ʊ\000ˋ\000̌\000͍\000Ύ\000Ϗ\000А\000ё\000Ғ\000ӓ\000A\000Ԕ\000Օ\000֖\000ח\000ؘ\000ٙ\000ښ\000A\000A\000A\000A\000A\000A\000A\000A\000ۛ\000ܜ\000ݝ\000ޞ\000A\000A\000A\000ߟ\000ࠠ\000ࡡ\000ࢢ\000ࣣ\000त\000॥\000দ\000A\000A\000A\000১\000ਨ\000੩\000પ\000૫\000ବ\000୭\000ம\000௯\000ర\000౱\000ಲ\000ೳ\000ഴ\000൵\000බ\000෷\000ุ\000๹\000຺\000໻\000༼\000ཽ\000྾\000࿿\000၀\000A\000ႁ\000Ⴢ\000A\000ᄃ\000ᅄ\000ᆅ\000ᇆ\000ሇ\000ቈ\000኉\000ዊ\000ጋ\000ፌ\000\000ᎍ\000Ꮞ\000ᐏ\000ᑐ\000ᒑ\000ᓒ\000ᔓ\000ᕔ\000ᖕ\000ᗖ\000A\000A\000ᘗ\000A\000ᙘ\000A\000A\000A\000A\000A\000A\000A\000A\000A\000A\000A\000ᚙ\000ᛚ\000᜛\000᝜\000A\000ឝ\000៞\000\000᠟\000ᡠ\000ᢡ\000ᣢ\000ᤣ\000ᥤ\000ᦥ\000᧦\000\000ᨧ\000ᩨ\000᪩\000᫪\000ᬫ\000᭬\000ᮭ\000ᯮ\000ᰯ\000ᱰ\000A\000Ჱ\000ᳲ\000ᴳ\000ᵴ\000ᶵ\000᷶\000A\000ḷ\000\000Ṹ\000ẹ\000Ỻ\000Ἳ\000ὼ\000᾽\000῾\000‿\000₀\000⃁\000ℂ\000⅃\000ↄ\000⇅\000∆\000≇\000⊈\000⋉\000⌊\000⍋\000⎌\000⏍\000A\000␎\000A\000⑏\000⒐\000A\000A\000\000ⓑ\000┒\000\000╓\000\000\000▔\000◕\000☖\000♗\000⚘\000\000⛙\000✚\000❛\000➜\000⟝\000⠞\000⡟\000⢠\000᷶\000⣡\000\000⤢\000⥣\000⦤\000\000⧥\000\000⨦\000\000⩧\000⪨\000⫩\000⬪\000⭫\000⮬\000⯭\000Ⱞ\000\000Ɐ\000Ⲱ\000⳱\000ⴲ\000⵳\000\000ⶴ\000A\000ⷵ\000⸶\000⹷\000⺸\000⻹\000\000⼺\000⽻\000⾼\000\000⿽\000〾\000\000み\000ダ\000㄁\000ㅂ\000ㆃ\000㇄\000\000㈅\000\000\000㉆\000\000㊇\000㋈\000㌉\000㍊\000㎋\000㏌\000㐍\000㑎\000㒏\000㓐\000㔑\000\000A\000㕒\000\000\000㖓\000㗔\000\000㘕\000㙖\000\000㚗\000\000㛘\000㜙\000㝚\000\000㞛\000㟜\000㠝\000㡞\000㢟\000\000㣠\000\000\000㤡\000㥢\000㦣\000㧤\000㨥\000\000\000㩦\000㪧\000㫨\000㬩\000\000㭪\000㮫\000㯬\000㰭\000\000㱮\000\000\000㲯\000㳰\000\000\000㴱\000㵲\000\000㶳\000㷴\000㸵\000㹶\000\000\000㺷\000\000㻸\000㼹\000\000㽺\000\000\000㾻\000", offset, result);
    return result;
  }
  
  private static int zzUnpackRowMap(String packed, int offset, int[] result) {
    int i = 0;
    int j = offset;
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    } 
    return j;
  }



  
  private static final int[] ZZ_TRANS = zzUnpackTrans();






































































  
  private static final String ZZ_TRANS_PACKED_0 = "\002\002\001\003\002\004\001\005\001\006\001\003\001\002\001\003\001\007\001\b\002\003\001\b\001\t\001\003\001\n\001\013\001\f\001\r\001\016\001\017\001\020\001\021\001\022\001\023\001\024\001\b\001\025\001\026\003\003\001\027\001\030\003\003\001\031\001\032\001\033\001\034\001\003\001\035\001\036\001\037\001 \001!\001\"\001#\001$\001%\001&\001'\001(\001)\001*\001+\001,\001-\001.\001/\0010\0011C\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\030\000\002\004A\000\0012\0013-\000\0014@\000\0015\025\000\0016\0017\0018\0019\001\000\0017\001:\006\000\0016\005\000\0017\b\000\0019$\000\0016\002\b\002\000\001\b\001:\006\000\0016\005\000\001\b3\000\001;3\000\001\003\004\000\b\003\001\000\002\003\001<\005\003\002\000\003\003\001\000\002\003\001=\013\003\027\000\001\003\004\000\b\003\001\000\003\003\001>\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001?\001\003\002\000\001@\002\003\001\000\007\003\001A\006\003\027\000\001\003\004\000\b\003\001\000\005\003\001B\001C\001\003\002\000\003\003\001\000\003\003\001D\001E\t\003\027\000\001\003\004\000\b\003\001\000\007\003\001F\002\000\001\003\001G\001\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001H\n\003\027\000\001I\004\000\b\003\001\000\001\003\001J\006\003\002\000\003\003\001\000\002\003\001K\005\003\001L\003\003\001M\001\003\025\000\001N\001O\001N\001P\024N\001Q(N\001\022\001R\001\022\001S\025\022\001T'\022\002\000\001U\004\000\b\003\001\000\003\003\001V\001\003\001W\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001X\005\003\002\000\003\003\001\000\003\003\001Y\004\003\001Z\005\003\027\000\001\003\004\000\b\003\001\000\005\003\001[\001\\\001\003\002\000\003\003\001\000\002\003\001]\001^\n\003\027\000\001\003\004\000\b\003\001\000\004\003\001_\003\003\002\000\001`\002\003\001\000\006\003\001a\007\003\027\000\001\003\004\000\b\003\001\000\003\003\001b\004\003\002\000\003\003\001\000\003\003\001c\n\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001d\n\003\027\000\001e\004\000\b\003\001\000\002\003\001f\002\003\001g\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001h\n\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\002\003\001i\013\003I\000\001j@\000\001k\001l?\000\001m\001\000\001n>\000\001o@\000\001p\006\000\001q9\000\001r\007\000\001s8\000\001t\b\000\001u7\000\001v\t\000\001w6\000\001x@\000\001y\f\000\0032\001\000=2\006z\001{:z\t\000\0016\0017\0018\002\000\0017\001:\006\000\0016\005\000\0017.\000\0028\002\000\0018\001:\f\000\0018.\000\002|\001\000\002|\001\000\001|\002\000\003|\005\000\002|\001\000\001|\004\000\001|'\000\002}\002\000\001}\r\000\001}3\000\001~3\000\001\004\000\b\003\001\000\005\003\001\002\003\002\000\003\003\001\000\b\003\001\005\003\027\000\001\003\004\000\b\003\001\000\002\003\001\005\003\002\000\003\003\001\000\004\003\001\t\003\027\000\001\003\004\000\b\003\001\000\001\003\001\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001\002\000\003\003\001\000\016\003\027\000\001\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001\n\003\027\000\001\003\004\000\b\003\001\000\002\003\001\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\n\003\001\003\003\027\000\001\003\004\000\b\003\001\000\002\003\001\002\003\001\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001\n\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001\t\003\025\000\030P\001)P\001N\001\007P\001\003P\001\002P\002N\001P\001N\003P\001\003N\001<P\001Q(P\001S\001\022\001\007S\001\022\003S\001\022\002S\002\022\001S\001\022\003S\001\022\001\003\022=S\001'S\002\000\001\003\004\000\b\003\001\000\006\003\001\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\f\003\001\001\003\027\000\001\003\004\000\b\003\001\000\001\003\001\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001 \004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001¡\n\003\027\000\001\003\004\000\b\003\001\000\001\003\001¢\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001£\005\003\001¤\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001¥\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001¦\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001§\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001¨\005\003\001©\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\n\003\001ª\003\003\027\000\001\003\004\000\b\003\001\000\004\003\001«\003\003\002\000\003\003\001\000\016\003\027\000\001¬\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001­\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001\003\001®\001\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001¯\001°\t\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001±\r\003\027\000\001\003\004\000\b\003\001\000\006\003\001²\001\003\002\000\003\003\001\000\004\003\001³\t\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001´\t\003I\000\001µ\001¶?\000\001·\f\000\006z\001¸:z\005¹\001º\001{:¹\t\000\0016\002|\001\000\002|\001\000\001|\002\000\003|\0016\004\000\002|\001\000\001|\004\000\001|'\000\002}\002\000\001}\001\000\001»\003\000\001»\007\000\001}&\000\001\003\004\000\b\003\001\000\003\003\001¼\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001½\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001¾\n\003\027\000\001\003\004\000\b\003\001\000\007\003\001¿\002\000\003\003\001\000\016\003\027\000\001À\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Á\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\006\003\001Â\007\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ã\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001Ä\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001Å\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Æ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ç\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\t\003\001È\004\003\027\000\001\003\004\000\b\003\001\000\003\003\001É\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Ê\t\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ë\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001Ì\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001Í\r\003\027\000\001\003\004\000\b\003\001\000\001\003\001Î\006\003\002\000\003\003\001\000\016\003\025\000\002P\001\007P\002Ï\001P\002Ï\001P\001Ï\002P\003Ï\002P\001Q\002P\002Ï\001P\001Ï\004P\001Ï'P\001\003P\001\tP\001\003P\001.P\001N\003P\001N\tP\001\003P\001N$P\030\000\001(\000\002S\001\007S\002Ð\001S\002Ð\001S\001Ð\002S\003Ð\003S\001\001S\002Ð\001S\001Ð\004S\001Ð\035S\001Ñ\001Ò\001Ñ\001\000\025Ñ\001T'Ñ\002\000\001\003\004\000\b\003\001\000\006\003\001Ó\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Ô\t\003\027\000\001\003\004\000\b\003\001\000\005\003\001Õ\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001Ö\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001×\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001Ø\r\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ù\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001Ú\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001Û\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ü\005\003\001Ý\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Þ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001ß\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001à\001\003\002\000\003\003\001\000\003\003\001á\n\003\027\000\001\003\004\000\b\003\001\000\005\003\001â\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001\003\001ã\001\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001ä\n\003\027\000\001\003\004\000\b\003\001\000\006\003\001å\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001æ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\013\003\001ç\002\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001\003\001è\f\003\027\000\001\003\004\000\b\003\001\000\005\003\001é\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\005\003\001ê\b\003\027\000\001\003\004\000\b\003\001\000\006\003\001ë\001\003\002\000\003\003\001\000\016\003I\000\001ì\f\000\005z\001º\001¸:z\006¹\001í:¹\002\000\001\003\004\000\b\003\001\000\007\003\001î\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\f\003\001ï\001\003\027\000\001\003\004\000\b\003\001\000\002\003\001ð\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ñ\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001ò\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001ó\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001ô\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001õ\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001ö\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001÷\r\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001ø\t\003\027\000\001\003\004\000\b\003\001\000\001\003\001ù\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\002\003\001ú\013\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001û\r\003\025\000\nP\002ü\001P\002ü\001P\001ü\002P\003ü\002P\001Q\002P\002ü\001P\001ü\004P\001ü\035P\nS\002ý\001S\002ý\001S\001ý\002S\003ý\003S\001\001S\002ý\001S\001ý\004S\001ý\035S\001\000\001Ñ\001þ\007\000\001Ñ\003\000\001Ñ\002\000\002Ñ\001\000\001Ñ\003\000\005Ñ&\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\013\003\001ÿ\002\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001\003\001Ā\f\003\027\000\001\003\004\000\b\003\001\000\003\003\001ā\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\002\003\001Ă\013\003\027\000\001\003\004\000\b\003\001\000\007\003\001ă\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Ą\t\003\027\000\001\003\004\000\b\003\001\000\001\003\001ą\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001Ć\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001ć\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ĉ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001ĉ\005\003\002\000\003\003\001\000\016\003\027\000\001Ċ\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001ċ\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Č\t\003\027\000\001\003\004\000\b\003\001\000\003\003\001č\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001Ď\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001ď\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Đ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001đ\004\003\002\000\003\003\001\000\016\003\025\000\005¹\001Ē\001í:¹\002\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001ē\t\003\027\000\001\003\004\000\b\003\001\000\007\003\001Ĕ\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ĕ\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\005\003\001Ė\b\003\027\000\001\003\004\000\b\003\001\000\006\003\001ė\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ę\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001ę\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ě\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001ě\r\003\027\000\001\003\004\000\b\003\001\000\002\003\001Ĝ\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\002\003\001ĝ\013\003\025\000\nP\002Ğ\001P\002Ğ\001P\001Ğ\002P\003Ğ\002P\001Q\002P\002Ğ\001P\001Ğ\004P\001Ğ\035P\nS\002ğ\001S\002ğ\001S\001ğ\002S\003ğ\003S\001\001S\002ğ\001S\001ğ\004S\001ğ\035S\002\000\001þ\007\000\002Ġ\001\000\002Ġ\001\000\001Ġ\002\000\003Ġ\005\000\002Ġ\001\000\001Ġ\004\000\001Ġ\037\000\001\003\004\000\b\003\001\000\003\003\001ġ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001Ģ\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ģ\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\004\003\001Ĥ\003\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ĥ\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\006\003\001Ħ\007\003\027\000\001\003\004\000\b\003\001\000\001\003\001ħ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001Ĩ\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001ĩ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001Ī\r\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001ī\r\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ĭ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\t\003\001ĭ\004\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Į\t\003\027\000\001\003\004\000\b\003\001\000\003\003\001į\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001İ\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\b\003\001ı\005\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001Ĳ\r\003\027\000\001\003\004\000\b\003\001\000\004\003\001ĳ\003\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001Ĵ\n\003\025\000\nP\002N\001P\002N\001P\001N\002P\003N\002P\001Q\002P\002N\001P\001N\004P\001N\035P\nS\002\022\001S\002\022\001S\001\022\002S\003\022\003S\001\001S\002\022\001S\001\022\004S\001\022\035S\n\000\002ĵ\001\000\002ĵ\001\000\001ĵ\002\000\003ĵ\005\000\002ĵ\001\000\001ĵ\004\000\001ĵ\037\000\001\003\004\000\b\003\001\000\b\003\002\000\001Ķ\002\003\001\000\016\003\027\000\001ķ\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001ĸ\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001Ĺ\r\003\027\000\001\003\004\000\b\003\001\000\003\003\001ĺ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ļ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001ļ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ľ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001ľ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001Ŀ\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ŀ\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ł\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\n\003\001ł\003\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001Ń\002\003\001\000\016\003\037\000\002ń\001\000\002ń\001\000\001ń\002\000\003ń\005\000\002ń\001\000\001ń\004\000\001ń\037\000\001\003\004\000\b\003\001\000\003\003\001Ņ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001ņ\r\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ň\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ň\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001ŉ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ŋ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001ŋ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Ō\t\003\037\000\002Ñ\001\000\002Ñ\001\000\001Ñ\002\000\003Ñ\005\000\002Ñ\001\000\001Ñ\004\000\001Ñ\037\000\001\003\004\000\b\003\001\000\003\003\001ō\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001Ŏ\n\003\027\000\001\003\004\000\b\003\001\000\001\003\001ŏ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\005\003\001Ő\b\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\r\003\001ő\027\000\001\003\004\000\b\003\001\000\004\003\001Œ\003\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001œ\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ŕ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\005\003\001ŕ\b\003\025\000";






































































  
  private static final int ZZ_UNKNOWN_ERROR = 0;






































































  
  private static final int ZZ_NO_MATCH = 1;





































































  
  private static final int ZZ_PUSHBACK_2BIG = 2;






































































  
  private static int[] zzUnpackTrans() {
    int[] result = new int[16380];
    int offset = 0;
    offset = zzUnpackTrans("\002\002\001\003\002\004\001\005\001\006\001\003\001\002\001\003\001\007\001\b\002\003\001\b\001\t\001\003\001\n\001\013\001\f\001\r\001\016\001\017\001\020\001\021\001\022\001\023\001\024\001\b\001\025\001\026\003\003\001\027\001\030\003\003\001\031\001\032\001\033\001\034\001\003\001\035\001\036\001\037\001 \001!\001\"\001#\001$\001%\001&\001'\001(\001)\001*\001+\001,\001-\001.\001/\0010\0011C\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\030\000\002\004A\000\0012\0013-\000\0014@\000\0015\025\000\0016\0017\0018\0019\001\000\0017\001:\006\000\0016\005\000\0017\b\000\0019$\000\0016\002\b\002\000\001\b\001:\006\000\0016\005\000\001\b3\000\001;3\000\001\003\004\000\b\003\001\000\002\003\001<\005\003\002\000\003\003\001\000\002\003\001=\013\003\027\000\001\003\004\000\b\003\001\000\003\003\001>\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001?\001\003\002\000\001@\002\003\001\000\007\003\001A\006\003\027\000\001\003\004\000\b\003\001\000\005\003\001B\001C\001\003\002\000\003\003\001\000\003\003\001D\001E\t\003\027\000\001\003\004\000\b\003\001\000\007\003\001F\002\000\001\003\001G\001\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001H\n\003\027\000\001I\004\000\b\003\001\000\001\003\001J\006\003\002\000\003\003\001\000\002\003\001K\005\003\001L\003\003\001M\001\003\025\000\001N\001O\001N\001P\024N\001Q(N\001\022\001R\001\022\001S\025\022\001T'\022\002\000\001U\004\000\b\003\001\000\003\003\001V\001\003\001W\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001X\005\003\002\000\003\003\001\000\003\003\001Y\004\003\001Z\005\003\027\000\001\003\004\000\b\003\001\000\005\003\001[\001\\\001\003\002\000\003\003\001\000\002\003\001]\001^\n\003\027\000\001\003\004\000\b\003\001\000\004\003\001_\003\003\002\000\001`\002\003\001\000\006\003\001a\007\003\027\000\001\003\004\000\b\003\001\000\003\003\001b\004\003\002\000\003\003\001\000\003\003\001c\n\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001d\n\003\027\000\001e\004\000\b\003\001\000\002\003\001f\002\003\001g\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001h\n\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\002\003\001i\013\003I\000\001j@\000\001k\001l?\000\001m\001\000\001n>\000\001o@\000\001p\006\000\001q9\000\001r\007\000\001s8\000\001t\b\000\001u7\000\001v\t\000\001w6\000\001x@\000\001y\f\000\0032\001\000=2\006z\001{:z\t\000\0016\0017\0018\002\000\0017\001:\006\000\0016\005\000\0017.\000\0028\002\000\0018\001:\f\000\0018.\000\002|\001\000\002|\001\000\001|\002\000\003|\005\000\002|\001\000\001|\004\000\001|'\000\002}\002\000\001}\r\000\001}3\000\001~3\000\001\004\000\b\003\001\000\005\003\001\002\003\002\000\003\003\001\000\b\003\001\005\003\027\000\001\003\004\000\b\003\001\000\002\003\001\005\003\002\000\003\003\001\000\004\003\001\t\003\027\000\001\003\004\000\b\003\001\000\001\003\001\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001\002\000\003\003\001\000\016\003\027\000\001\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001\n\003\027\000\001\003\004\000\b\003\001\000\002\003\001\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\n\003\001\003\003\027\000\001\003\004\000\b\003\001\000\002\003\001\002\003\001\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001\n\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001\t\003\025\000\030P\001)P\001N\001\007P\001\003P\001\002P\002N\001P\001N\003P\001\003N\001<P\001Q(P\001S\001\022\001\007S\001\022\003S\001\022\002S\002\022\001S\001\022\003S\001\022\001\003\022=S\001'S\002\000\001\003\004\000\b\003\001\000\006\003\001\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\f\003\001\001\003\027\000\001\003\004\000\b\003\001\000\001\003\001\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001 \004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001¡\n\003\027\000\001\003\004\000\b\003\001\000\001\003\001¢\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001£\005\003\001¤\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001¥\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001¦\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001§\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001¨\005\003\001©\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\n\003\001ª\003\003\027\000\001\003\004\000\b\003\001\000\004\003\001«\003\003\002\000\003\003\001\000\016\003\027\000\001¬\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001­\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001\003\001®\001\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001¯\001°\t\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001±\r\003\027\000\001\003\004\000\b\003\001\000\006\003\001²\001\003\002\000\003\003\001\000\004\003\001³\t\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001´\t\003I\000\001µ\001¶?\000\001·\f\000\006z\001¸:z\005¹\001º\001{:¹\t\000\0016\002|\001\000\002|\001\000\001|\002\000\003|\0016\004\000\002|\001\000\001|\004\000\001|'\000\002}\002\000\001}\001\000\001»\003\000\001»\007\000\001}&\000\001\003\004\000\b\003\001\000\003\003\001¼\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001½\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001¾\n\003\027\000\001\003\004\000\b\003\001\000\007\003\001¿\002\000\003\003\001\000\016\003\027\000\001À\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Á\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\006\003\001Â\007\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ã\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001Ä\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001Å\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Æ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ç\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\t\003\001È\004\003\027\000\001\003\004\000\b\003\001\000\003\003\001É\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Ê\t\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ë\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001Ì\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001Í\r\003\027\000\001\003\004\000\b\003\001\000\001\003\001Î\006\003\002\000\003\003\001\000\016\003\025\000\002P\001\007P\002Ï\001P\002Ï\001P\001Ï\002P\003Ï\002P\001Q\002P\002Ï\001P\001Ï\004P\001Ï'P\001\003P\001\tP\001\003P\001.P\001N\003P\001N\tP\001\003P\001N$P\030\000\001(\000\002S\001\007S\002Ð\001S\002Ð\001S\001Ð\002S\003Ð\003S\001\001S\002Ð\001S\001Ð\004S\001Ð\035S\001Ñ\001Ò\001Ñ\001\000\025Ñ\001T'Ñ\002\000\001\003\004\000\b\003\001\000\006\003\001Ó\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Ô\t\003\027\000\001\003\004\000\b\003\001\000\005\003\001Õ\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001Ö\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001×\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001Ø\r\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ù\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001Ú\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001Û\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ü\005\003\001Ý\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Þ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001ß\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001à\001\003\002\000\003\003\001\000\003\003\001á\n\003\027\000\001\003\004\000\b\003\001\000\005\003\001â\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001\003\001ã\001\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001ä\n\003\027\000\001\003\004\000\b\003\001\000\006\003\001å\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001æ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\013\003\001ç\002\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001\003\001è\f\003\027\000\001\003\004\000\b\003\001\000\005\003\001é\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\005\003\001ê\b\003\027\000\001\003\004\000\b\003\001\000\006\003\001ë\001\003\002\000\003\003\001\000\016\003I\000\001ì\f\000\005z\001º\001¸:z\006¹\001í:¹\002\000\001\003\004\000\b\003\001\000\007\003\001î\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\f\003\001ï\001\003\027\000\001\003\004\000\b\003\001\000\002\003\001ð\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ñ\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001ò\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001ó\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001ô\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001õ\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001ö\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001÷\r\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001ø\t\003\027\000\001\003\004\000\b\003\001\000\001\003\001ù\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\002\003\001ú\013\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001û\r\003\025\000\nP\002ü\001P\002ü\001P\001ü\002P\003ü\002P\001Q\002P\002ü\001P\001ü\004P\001ü\035P\nS\002ý\001S\002ý\001S\001ý\002S\003ý\003S\001\001S\002ý\001S\001ý\004S\001ý\035S\001\000\001Ñ\001þ\007\000\001Ñ\003\000\001Ñ\002\000\002Ñ\001\000\001Ñ\003\000\005Ñ&\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\013\003\001ÿ\002\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001\003\001Ā\f\003\027\000\001\003\004\000\b\003\001\000\003\003\001ā\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\002\003\001Ă\013\003\027\000\001\003\004\000\b\003\001\000\007\003\001ă\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Ą\t\003\027\000\001\003\004\000\b\003\001\000\001\003\001ą\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001Ć\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001ć\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ĉ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\002\003\001ĉ\005\003\002\000\003\003\001\000\016\003\027\000\001Ċ\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001ċ\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Č\t\003\027\000\001\003\004\000\b\003\001\000\003\003\001č\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001Ď\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001ď\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Đ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001đ\004\003\002\000\003\003\001\000\016\003\025\000\005¹\001Ē\001í:¹\002\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001ē\t\003\027\000\001\003\004\000\b\003\001\000\007\003\001Ĕ\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ĕ\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\005\003\001Ė\b\003\027\000\001\003\004\000\b\003\001\000\006\003\001ė\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ę\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001ę\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ě\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001ě\r\003\027\000\001\003\004\000\b\003\001\000\002\003\001Ĝ\005\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\002\003\001ĝ\013\003\025\000\nP\002Ğ\001P\002Ğ\001P\001Ğ\002P\003Ğ\002P\001Q\002P\002Ğ\001P\001Ğ\004P\001Ğ\035P\nS\002ğ\001S\002ğ\001S\001ğ\002S\003ğ\003S\001\001S\002ğ\001S\001ğ\004S\001ğ\035S\002\000\001þ\007\000\002Ġ\001\000\002Ġ\001\000\001Ġ\002\000\003Ġ\005\000\002Ġ\001\000\001Ġ\004\000\001Ġ\037\000\001\003\004\000\b\003\001\000\003\003\001ġ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001Ģ\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ģ\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\004\003\001Ĥ\003\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ĥ\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\006\003\001Ħ\007\003\027\000\001\003\004\000\b\003\001\000\001\003\001ħ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001Ĩ\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001ĩ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001Ī\r\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001ī\r\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ĭ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\t\003\001ĭ\004\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Į\t\003\027\000\001\003\004\000\b\003\001\000\003\003\001į\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001İ\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\b\003\001ı\005\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001Ĳ\r\003\027\000\001\003\004\000\b\003\001\000\004\003\001ĳ\003\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001Ĵ\n\003\025\000\nP\002N\001P\002N\001P\001N\002P\003N\002P\001Q\002P\002N\001P\001N\004P\001N\035P\nS\002\022\001S\002\022\001S\001\022\002S\003\022\003S\001\001S\002\022\001S\001\022\004S\001\022\035S\n\000\002ĵ\001\000\002ĵ\001\000\001ĵ\002\000\003ĵ\005\000\002ĵ\001\000\001ĵ\004\000\001ĵ\037\000\001\003\004\000\b\003\001\000\b\003\002\000\001Ķ\002\003\001\000\016\003\027\000\001ķ\004\000\b\003\001\000\b\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\005\003\001ĸ\002\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001Ĺ\r\003\027\000\001\003\004\000\b\003\001\000\003\003\001ĺ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ļ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001ļ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ľ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001ľ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\006\003\001Ŀ\001\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ŀ\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001Ł\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\n\003\001ł\003\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001Ń\002\003\001\000\016\003\037\000\002ń\001\000\002ń\001\000\001ń\002\000\003ń\005\000\002ń\001\000\001ń\004\000\001ń\037\000\001\003\004\000\b\003\001\000\003\003\001Ņ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\001ņ\r\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ň\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\001ň\002\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001ŉ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ŋ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\001\003\001ŋ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\004\003\001Ō\t\003\037\000\002Ñ\001\000\002Ñ\001\000\001Ñ\002\000\003Ñ\005\000\002Ñ\001\000\001Ñ\004\000\001Ñ\037\000\001\003\004\000\b\003\001\000\003\003\001ō\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\003\003\001Ŏ\n\003\027\000\001\003\004\000\b\003\001\000\001\003\001ŏ\006\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\005\003\001Ő\b\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\r\003\001ő\027\000\001\003\004\000\b\003\001\000\004\003\001Œ\003\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\007\003\001œ\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\003\003\001Ŕ\004\003\002\000\003\003\001\000\016\003\027\000\001\003\004\000\b\003\001\000\b\003\002\000\003\003\001\000\005\003\001ŕ\b\003\025\000", offset, result);
    return result;
  }
  
  private static int zzUnpackTrans(String packed, int offset, int[] result) {
    int i = 0;
    int j = offset;
    int l = packed.length();
    label10: while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--; while (true)
      { result[j++] = value; if (--count <= 0)
          continue label10;  } 
    }  return j;
  }







  
  private static final String[] ZZ_ERROR_MSG = new String[] { "Unkown internal scanner error", "Error: could not match input", "Error: pushback value was too large" };







  
  private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();

  
  private static final String ZZ_ATTRIBUTE_PACKED_0 = "\001\000\001\t\022\001\001\t\007\001\b\t\004\001\003\t\007\001\001\000\003\t\001\001\004\000\025\001\001\t\002\001\001\t\025\001\002\t\001\001\001\t\001\001\013\t\002\000\001\001\001\000\001\t\026\001\001\t\006\001\001\t\030\001\001\t\001\001\001\t\002\000\002\t\025\001\002\000\031\001\001\t\001\000\020\001\001\000\023\001\001\t\r\001\001\000\024\001\001\000\016\001\001\000\021\001";

  
  private Reader zzReader;
  
  private int zzState;

  
  private static int[] zzUnpackAttribute() {
    int[] result = new int[341];
    int offset = 0;
    offset = zzUnpackAttribute("\001\000\001\t\022\001\001\t\007\001\b\t\004\001\003\t\007\001\001\000\003\t\001\001\004\000\025\001\001\t\002\001\001\t\025\001\002\t\001\001\001\t\001\001\013\t\002\000\001\001\001\000\001\t\026\001\001\t\006\001\001\t\030\001\001\t\001\001\001\t\002\000\002\t\025\001\002\000\031\001\001\t\001\000\020\001\001\000\023\001\001\t\r\001\001\000\024\001\001\000\016\001\001\000\021\001", offset, result);
    return result;
  }
  
  private static int zzUnpackAttribute(String packed, int offset, int[] result) {
    int i = 0;
    int j = offset;
    int l = packed.length();
    label10: while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++); while (true)
      { result[j++] = value; if (--count <= 0)
          continue label10;  } 
    }  return j;
  }







  
  private int zzLexicalState = 0;


  
  private char[] zzBuffer = new char[16384];


  
  private int zzMarkedPos;


  
  private int zzCurrentPos;


  
  private int zzStartRead;


  
  private int zzEndRead;


  
  private int yyline;


  
  private int yychar;


  
  private int yycolumn;


  
  private boolean zzAtEOF;


  
  private boolean returnComments;


  
  private boolean returnWhitespace;


  
  private boolean keepLastDocComment;


  
  private String lastDocComment;



  
  private Token createToken(int type) {
    return createToken(type, false);
  }

  
  private Token createToken(int type, boolean invalid) {
    return new TokenImpl(type, yytext(), this.yyline, this.yycolumn, this.yychar, invalid);
  }






  
  public int getColumn() {
    return this.yycolumn;
  }










  
  public String getLastDocComment() {
    String comment = this.lastDocComment;
    this.lastDocComment = null;
    return comment;
  }






  
  public int getLine() {
    return this.yyline;
  }






  
  public int getOffset() {
    return this.yychar;
  }







  
  public boolean getReturnComments() {
    return this.returnComments;
  }







  
  public boolean getReturnWhitespace() {
    return this.returnWhitespace;
  }







  
  public void setKeepLastDocComment(boolean keep) {
    this.keepLastDocComment = keep;
  }








  
  public void setReturnComments(boolean returnComments) {
    this.returnComments = returnComments;
  }








  
  public void setReturnWhitespace(boolean returnWhitespace) {
    this.returnWhitespace = returnWhitespace;
  }









  
  SourceCodeScanner(Reader in) {
    this.zzReader = in;
  }






  
  SourceCodeScanner(InputStream in) {
    this(new InputStreamReader(in));
  }






  
  private static char[] zzUnpackCMap(String packed) {
    char[] map = new char[65536];
    int i = 0;
    int j = 0;
    label10: while (i < 1776) {
      int count = packed.charAt(i++);
      char value = packed.charAt(i++); while (true)
      { map[j++] = value; if (--count <= 0)
          continue label10;  } 
    }  return map;
  }










  
  private boolean zzRefill() throws IOException {
    if (this.zzStartRead > 0) {
      System.arraycopy(this.zzBuffer, this.zzStartRead, this.zzBuffer, 0, this.zzEndRead - this.zzStartRead);



      
      this.zzEndRead -= this.zzStartRead;
      this.zzCurrentPos -= this.zzStartRead;
      this.zzMarkedPos -= this.zzStartRead;
      this.zzStartRead = 0;
    } 

    
    if (this.zzCurrentPos >= this.zzBuffer.length) {
      
      char[] newBuffer = new char[this.zzCurrentPos * 2];
      System.arraycopy(this.zzBuffer, 0, newBuffer, 0, this.zzBuffer.length);
      this.zzBuffer = newBuffer;
    } 

    
    int numRead = this.zzReader.read(this.zzBuffer, this.zzEndRead, this.zzBuffer.length - this.zzEndRead);

    
    if (numRead < 0) {
      return true;
    }
    
    this.zzEndRead += numRead;
    return false;
  }





  
  public final void yyclose() throws IOException {
    this.zzAtEOF = true;
    this.zzEndRead = this.zzStartRead;
    
    if (this.zzReader != null) {
      this.zzReader.close();
    }
  }










  
  public final void yyreset(Reader reader) {
    this.zzReader = reader;
    this.zzAtEOF = false;
    this.zzEndRead = this.zzStartRead = 0;
    this.zzCurrentPos = this.zzMarkedPos = 0;
    this.yyline = this.yychar = this.yycolumn = 0;
    this.zzLexicalState = 0;
  }




  
  public final int yystate() {
    return this.zzLexicalState;
  }






  
  public final void yybegin(int newState) {
    this.zzLexicalState = newState;
  }




  
  public final String yytext() {
    return new String(this.zzBuffer, this.zzStartRead, this.zzMarkedPos - this.zzStartRead);
  }












  
  public final char yycharat(int pos) {
    return this.zzBuffer[this.zzStartRead + pos];
  }




  
  public final int yylength() {
    return this.zzMarkedPos - this.zzStartRead;
  }















  
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[0];
    } 
    
    throw new Error(message);
  }









  
  public void yypushback(int number) {
    if (number > yylength()) {
      zzScanError(2);
    }
    this.zzMarkedPos -= number;
  }














  
  public Token yylex() throws IOException {
    int zzEndReadL = this.zzEndRead;
    char[] zzBufferL = this.zzBuffer;
    char[] zzCMapL = ZZ_CMAP;
    
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    
    while (true) {
      int zzInput, zzMarkedPosL = this.zzMarkedPos;
      
      this.yychar += zzMarkedPosL - this.zzStartRead;
      
      boolean zzR = false; int zzCurrentPosL;
      for (zzCurrentPosL = this.zzStartRead; zzCurrentPosL < zzMarkedPosL; 
        zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
          case '\013':
          case '\f':
          case '':
          case ' ':
          case ' ':
            this.yyline++;
            this.yycolumn = 0;
            zzR = false;
            break;
          case '\r':
            this.yyline++;
            this.yycolumn = 0;
            zzR = true;
            break;
          case '\n':
            if (zzR) {
              zzR = false; break;
            } 
            this.yyline++;
            this.yycolumn = 0;
            break;
          
          default:
            zzR = false;
            this.yycolumn++;
            break;
        } 
      } 
      if (zzR) {
        boolean zzPeek;
        
        if (zzMarkedPosL < zzEndReadL) {
          zzPeek = (zzBufferL[zzMarkedPosL] == '\n');
        } else if (this.zzAtEOF) {
          zzPeek = false;
        } else {
          boolean eof = zzRefill();
          zzEndReadL = this.zzEndRead;
          zzMarkedPosL = this.zzMarkedPos;
          zzBufferL = this.zzBuffer;
          if (eof) {
            zzPeek = false;
          } else {
            zzPeek = (zzBufferL[zzMarkedPosL] == '\n');
          } 
        }  if (zzPeek) this.yyline--; 
      } 
      int zzAction = -1;
      
      zzCurrentPosL = this.zzCurrentPos = this.zzStartRead = zzMarkedPosL;
      
      this.zzState = this.zzLexicalState;



      
      while (true) {
        if (zzCurrentPosL < zzEndReadL)
        { zzInput = zzBufferL[zzCurrentPosL++]; }
        else { if (this.zzAtEOF) {
            int i = -1;
            
            break;
          } 
          
          this.zzCurrentPos = zzCurrentPosL;
          this.zzMarkedPos = zzMarkedPosL;
          boolean eof = zzRefill();
          
          zzCurrentPosL = this.zzCurrentPos;
          zzMarkedPosL = this.zzMarkedPos;
          zzBufferL = this.zzBuffer;
          zzEndReadL = this.zzEndRead;
          if (eof) {
            int i = -1;
            
            break;
          } 
          zzInput = zzBufferL[zzCurrentPosL++]; }

        
        int zzNext = zzTransL[zzRowMapL[this.zzState] + zzCMapL[zzInput]];
        if (zzNext == -1)
          break;  this.zzState = zzNext;
        
        int zzAttributes = zzAttrL[this.zzState];
        if ((zzAttributes & 0x1) == 1) {
          zzAction = this.zzState;
          zzMarkedPosL = zzCurrentPosL;
          if ((zzAttributes & 0x8) == 8) {
            break;
          }
        } 
      } 

      
      this.zzMarkedPos = zzMarkedPosL;
      
      switch ((zzAction < 0) ? zzAction : ZZ_ACTION[zzAction]) {
        case 87:
          return createToken(65581);
        case 112:
          continue;
        case 11:
          return createToken(8388609);
        case 113:
          continue;
        case 105:
          return createToken(65585);
        case 114:
          continue;
        case 95:
          return createToken(65571);
        case 115:
          continue;
        case 5:
          return createToken(16777234);
        case 116:
          continue;
        case 71:
          return createToken(65542);
        case 117:
          continue;
        case 34:
          return createToken(33554461);
        case 118:
          continue;
        case 89:
          return createToken(65538);
        case 119:
          continue;
        case 51:
          return createToken(16777231);
        case 120:
          continue;
        case 15:
          return createToken(8388613);
        case 121:
          continue;
        case 104:
          return createToken(65547);
        case 122:
          continue;
        case 80:
          return createToken(131109);
        case 123:
          continue;
        case 26:
          return createToken(16777236);
        case 124:
          continue;
        case 31:
          return createToken(16777239);
        case 125:
          continue;
        case 74:
          return createToken(65584);
        case 126:
          continue;
        case 62:
          return createToken(33554467);
        case 127:
          continue;
        case 38:
          return createToken(16777224);
        case 128:
          continue;
        case 69:
          return createToken(4194310);
        case 129:
          continue;
        case 43:
          return createToken(16777227);
        case 130:
          continue;
        case 28:
          return createToken(16777232);
        case 131:
          continue;
        case 23:
          return createToken(16777221);
        case 132:
          continue;
        case 7:
          return createToken(8388617);
        case 133:
          continue;
        case 102:
          return createToken(65537);
        case 134:
          continue;
        case 92:
          return createToken(65566);
        case 135:
          continue;
        case 35:
          return createToken(4194309);
        case 136:
          continue;
        case 46:
          return createToken(33554464);
        case 137:
          continue;
        case 60:
          return createToken(33554468);
        case 138:
          continue;
        case 91:
          return createToken(65577);
        case 139:
          continue;
        case 76:
          return createToken(65580);
        case 140:
          continue;
        case 75:
          return createToken(33554469);
        case 141:
          continue;
        case 66:
          return createToken(65551);
        case 142:
          continue;
        case 3:
          if (this.returnWhitespace)
            return createToken(2097152); 
          continue;
        case 143:
          continue;
        case 54:
          return createToken(134217728);
        case 144:
          continue;
        case 110:
          return createToken(65560);
        case 145:
          continue;
        case 16:
          return createToken(8388614);
        case 146:
          continue;
        case 61:
          return createToken(16777242);
        case 147:
          continue;
        case 8:
          return createToken(4194308, true);
        case 148:
          continue;
        case 96:
          return createToken(65553);
        case 149:
          continue;
        case 84:
          return createToken(65546);
        case 150:
          continue;
        case 94:
          return createToken(131086);
        case 151:
          continue;
        case 36:
          return createToken(65559);
        case 152:
          continue;
        case 83:
          return createToken(65545);
        case 153:
          continue;
        case 63:
          return createToken(4194306);
        case 154:
          continue;
        case 39:
          return createToken(16777226);
        case 155:
          continue;
        case 56:
          return createToken(65557);
        case 156:
          continue;
        case 32:
          if (this.returnComments)
            return createToken(524288); 
          continue;
        case 157:
          continue;
        case 70:
          return createToken(131077);
        case 158:
          continue;
        case 30:
          return createToken(16777238);
        case 159:
          continue;
        case 18:
          return createToken(8388616);
        case 160:
          continue;
        case 14:
          return createToken(8388612);
        case 161:
          continue;
        case 41:
          return createToken(16777225);
        case 162:
          continue;
        case 57:
          return createToken(4194308);
        case 163:
          continue;
        case 58:
          return createToken(65567);
        case 164:
          continue;
        case 48:
          return createToken(33554459);
        case 165:
          continue;
        case 81:
          return createToken(65540);
        case 166:
          continue;
        case 1:
          return createToken(262144, true);
        case 167:
          continue;
        case 9:
          return createToken(4194309, true);
        case 168:
          continue;
        case 4:
          return createToken(16777235);
        case 169:
          continue;
        case 29:
          return createToken(16777233);
        case 170:
          continue;
        case 98:
          return createToken(131075);
        case 171:
          continue;
        case 93:
          return createToken(65561);
        case 172:
          continue;
        case 20:
          return createToken(16777218);
        case 173:
          continue;
        case 47:
          return createToken(16777229);
        case 174:
          continue;
        case 2:
          return createToken(262144);
        case 175:
          continue;
        case 53:
          return createToken(33554466);
        case 176:
          continue;
        case 100:
          return createToken(65569);
        case 177:
          continue;
        case 55:
          return createToken(65583);
        case 178:
          continue;
        case 25:
          return createToken(16777223);
        case 179:
          continue;
        case 68:
          return createToken(131101);
        case 180:
          continue;
        case 6:
          return createToken(4194305);
        case 181:
          continue;
        case 13:
          return createToken(8388611);
        case 182:
          continue;
        case 45:
          return createToken(16777228);
        case 183:
          continue;
        case 21:
          return createToken(16777219);
        case 184:
          continue;
        case 78:
          return createToken(65554);
        case 185:
          continue;
        case 24:
          return createToken(16777222);
        case 186:
          continue;
        case 19:
          return createToken(33554433);
        case 187:
          continue;
        case 108:
          return createToken(65570);
        case 188:
          continue;
        case 65:
          return createToken(65579);
        case 189:
          continue;
        case 44:
          return createToken(33554463);
        case 190:
          continue;
        case 109:
          return createToken(65562);
        case 191:
          continue;
        case 99:
          return createToken(65548);
        case 192:
          continue;
        case 40:
          return createToken(16777241);
        case 193:
          continue;
        case 64:
          return createToken(4194307);
        case 194:
          continue;
        case 67:
          return createToken(65552);
        case 195:
          continue;
        case 97:
          return createToken(65555);
        case 196:
          continue;
        case 79:
          return createToken(65576);
        case 197:
          continue;
        case 77:
          return createToken(131092);
        case 198:
          continue;
        case 101:
          return createToken(65568);
        case 199:
          continue;
        case 59:
          return createToken(131099);
        case 200:
          continue;
        case 22:
          return createToken(16777220);
        case 201:
          continue;
        case 111:
          return createToken(65578);
        case 202:
          continue;
        case 73:
          return createToken(65558);
        case 203:
          continue;
        case 10:
          return createToken(67108864);
        case 204:
          continue;
        case 12:
          return createToken(8388610);
        case 205:
          continue;
        case 27:
          return createToken(16777237);
        case 206:
          continue;
        case 49:
          return createToken(16777230);
        case 207:
          continue;
        case 107:
          return createToken(65564);
        case 208:
          continue;
        case 88:
          return createToken(65572);
        case 209:
          continue;
        case 72:
          return createToken(131080);
        case 210:
          continue;
        case 17:
          return createToken(8388615);
        case 211:
          continue;
        case 50:
          return createToken(33554460);
        case 212:
          continue;
        case 33:
          return createToken(33554462);
        case 213:
          continue;
        case 52:
          return createToken(33554465);
        case 214:
          continue;
        case 42:
          return createToken(16777240);
        case 215:
          continue;
        case 103:
          return createToken(65575);
        case 216:
          continue;
        case 90:
          return createToken(65574);
        case 217:
          continue;
        case 85:
          return createToken(65586);
        case 218:
          continue;
        case 37:
          return createToken(65549);
        case 219:
          continue;
        case 106:
          return createToken(65582);
        case 220:
          continue;
        case 86:
          if (this.keepLastDocComment) {
            this.lastDocComment = yytext();
          }
          if (this.returnComments)
            return createToken(1048576); 
          continue;
        case 221:
          continue;
        case 82:
          return createToken(65543);
        case 222:
          continue;
      } 
      if (zzInput == -1 && this.zzStartRead == this.zzCurrentPos) {
        this.zzAtEOF = true;
        return null;
      } 
      
      zzScanError(1);
    } 
  }
}
